name: development deployment

on:
  pull_request:
    branches:
      - dev
    types: [closed]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-versions: [16.x]

    env:
      CI: ''
      PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
      REACT_APP_API: ${{ secrets.REACT_APP_API }}
      REACT_APP_SOCKET: ${{ secrets.REACT_APP_SOCKET }}
      REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}
      REACT_APP_REDIRECT_URI: ${{ secrets.REACT_APP_REDIRECT_URI }}
      REACT_APP_GOOGLE_ID: ${{ secrets.REACT_APP_GOOGLE_ID }}
      REACT_APP_GOOGLE_CALLBACK_URL: ${{ secrets.REACT_APP_GOOGLE_CALLBACK_URL }}
      REACT_APP_FCM_VAPID_KEY: ${{ secrets.REACT_APP_FCM_VAPID_KEY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.DEV_AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.DEV_AWS_DISTRIBUTION_ID}} --paths "/*"
